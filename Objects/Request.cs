//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Bakery
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Request.
    /// </summary>
    // *** Start programmer edit section *** (Request CustomAttributes)

    // *** End programmer edit section *** (Request CustomAttributes)
    [BusinessServer("IIS.Bakery.RequestBS, Bakery.BusinessServers", ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAllEvents)]
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("Bakery_RequestE", new string[] {
            "Date as \'Date\'",
            "Totalprice as \'Totalprice\'",
            "Cost as \'Cost\'",
            "Status as \'Status\'",
            "Shift as \'Shift\'",
            "Shift.InterruptReason as \'Interrupt reason\'"})]
    [AssociatedDetailViewAttribute("Bakery_RequestE", "CakeIntoRequest", "Bakery_CakeIntoRequestE", true, "", "Cake into request", true, new string[] {
            ""})]
    [View("Bakery_RequestL", new string[] {
            "Date as \'Date\'",
            "Totalprice as \'Totalprice\'",
            "Cost as \'Cost\'",
            "Status as \'Status\'",
            "Shift.InterruptReason as \'Interrupt reason\'"})]
    [View("RequestE", new string[] {
            "Date as \'Date\'",
            "Totalprice as \'Totalprice\'",
            "Cost as \'Cost\'",
            "Status as \'Status\'",
            "Shift as \'Shift\'",
            "Shift.InterruptReason as \'Interrupt reason\'"})]
    [AssociatedDetailViewAttribute("RequestE", "CakeIntoRequest", "CakeIntoRequestE", true, "", "Cake into request", true, new string[] {
            ""})]
    [View("RequestL", new string[] {
            "Date as \'Date\'",
            "Totalprice as \'Totalprice\'",
            "Cost as \'Cost\'",
            "Status as \'Status\'",
            "Shift.InterruptReason as \'Interrupt reason\'"})]
    public class Request : ICSSoft.STORMNET.DataObject
    {
        
        private System.DateTime fDate;
        
        private decimal fTotalprice;
        
        private decimal fCost;
        
        private IIS.Bakery.RequestStatus fStatus;
        
        private IIS.Bakery.Shift fShift;
        
        private IIS.Bakery.DetailArrayOfCakeIntoRequest fCakeIntoRequest;
        
        // *** Start programmer edit section *** (Request CustomMembers)

        // *** End programmer edit section *** (Request CustomMembers)

        
        /// <summary>
        /// Date.
        /// </summary>
        // *** Start programmer edit section *** (Request.Date CustomAttributes)

        // *** End programmer edit section *** (Request.Date CustomAttributes)
        public virtual System.DateTime Date
        {
            get
            {
                // *** Start programmer edit section *** (Request.Date Get start)

                // *** End programmer edit section *** (Request.Date Get start)
                System.DateTime result = this.fDate;
                // *** Start programmer edit section *** (Request.Date Get end)

                // *** End programmer edit section *** (Request.Date Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Request.Date Set start)

                // *** End programmer edit section *** (Request.Date Set start)
                this.fDate = value;
                // *** Start programmer edit section *** (Request.Date Set end)

                // *** End programmer edit section *** (Request.Date Set end)
            }
        }
        
        /// <summary>
        /// Totalprice.
        /// </summary>
        // *** Start programmer edit section *** (Request.Totalprice CustomAttributes)

        // *** End programmer edit section *** (Request.Totalprice CustomAttributes)
        public virtual decimal Totalprice
        {
            get
            {
                // *** Start programmer edit section *** (Request.Totalprice Get start)

                // *** End programmer edit section *** (Request.Totalprice Get start)
                decimal result = this.fTotalprice;
                // *** Start programmer edit section *** (Request.Totalprice Get end)

                // *** End programmer edit section *** (Request.Totalprice Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Request.Totalprice Set start)

                // *** End programmer edit section *** (Request.Totalprice Set start)
                this.fTotalprice = value;
                // *** Start programmer edit section *** (Request.Totalprice Set end)

                // *** End programmer edit section *** (Request.Totalprice Set end)
            }
        }
        
        /// <summary>
        /// Cost.
        /// </summary>
        // *** Start programmer edit section *** (Request.Cost CustomAttributes)

        // *** End programmer edit section *** (Request.Cost CustomAttributes)
        public virtual decimal Cost
        {
            get
            {
                // *** Start programmer edit section *** (Request.Cost Get start)

                // *** End programmer edit section *** (Request.Cost Get start)
                decimal result = this.fCost;
                // *** Start programmer edit section *** (Request.Cost Get end)

                // *** End programmer edit section *** (Request.Cost Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Request.Cost Set start)

                // *** End programmer edit section *** (Request.Cost Set start)
                this.fCost = value;
                // *** Start programmer edit section *** (Request.Cost Set end)

                // *** End programmer edit section *** (Request.Cost Set end)
            }
        }
        
        /// <summary>
        /// Status.
        /// </summary>
        // *** Start programmer edit section *** (Request.Status CustomAttributes)

        // *** End programmer edit section *** (Request.Status CustomAttributes)
        public virtual IIS.Bakery.RequestStatus Status
        {
            get
            {
                // *** Start programmer edit section *** (Request.Status Get start)

                // *** End programmer edit section *** (Request.Status Get start)
                IIS.Bakery.RequestStatus result = this.fStatus;
                // *** Start programmer edit section *** (Request.Status Get end)

                // *** End programmer edit section *** (Request.Status Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Request.Status Set start)

                // *** End programmer edit section *** (Request.Status Set start)
                this.fStatus = value;
                // *** Start programmer edit section *** (Request.Status Set end)

                // *** End programmer edit section *** (Request.Status Set end)
            }
        }
        
        /// <summary>
        /// Request.
        /// </summary>
        // *** Start programmer edit section *** (Request.Shift CustomAttributes)

        // *** End programmer edit section *** (Request.Shift CustomAttributes)
        [NotNull()]
        public virtual IIS.Bakery.Shift Shift
        {
            get
            {
                // *** Start programmer edit section *** (Request.Shift Get start)

                // *** End programmer edit section *** (Request.Shift Get start)
                IIS.Bakery.Shift result = this.fShift;
                // *** Start programmer edit section *** (Request.Shift Get end)

                // *** End programmer edit section *** (Request.Shift Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Request.Shift Set start)

                // *** End programmer edit section *** (Request.Shift Set start)
                this.fShift = value;
                // *** Start programmer edit section *** (Request.Shift Set end)

                // *** End programmer edit section *** (Request.Shift Set end)
            }
        }
        
        /// <summary>
        /// Request.
        /// </summary>
        // *** Start programmer edit section *** (Request.CakeIntoRequest CustomAttributes)

        // *** End programmer edit section *** (Request.CakeIntoRequest CustomAttributes)
        public virtual IIS.Bakery.DetailArrayOfCakeIntoRequest CakeIntoRequest
        {
            get
            {
                // *** Start programmer edit section *** (Request.CakeIntoRequest Get start)

                // *** End programmer edit section *** (Request.CakeIntoRequest Get start)
                if ((this.fCakeIntoRequest == null))
                {
                    this.fCakeIntoRequest = new IIS.Bakery.DetailArrayOfCakeIntoRequest(this);
                }
                IIS.Bakery.DetailArrayOfCakeIntoRequest result = this.fCakeIntoRequest;
                // *** Start programmer edit section *** (Request.CakeIntoRequest Get end)

                // *** End programmer edit section *** (Request.CakeIntoRequest Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Request.CakeIntoRequest Set start)

                // *** End programmer edit section *** (Request.CakeIntoRequest Set start)
                this.fCakeIntoRequest = value;
                // *** Start programmer edit section *** (Request.CakeIntoRequest Set end)

                // *** End programmer edit section *** (Request.CakeIntoRequest Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "Bakery_RequestE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View Bakery_RequestE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("Bakery_RequestE", typeof(IIS.Bakery.Request));
                }
            }
            
            /// <summary>
            /// "Bakery_RequestL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View Bakery_RequestL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("Bakery_RequestL", typeof(IIS.Bakery.Request));
                }
            }
            
            /// <summary>
            /// "RequestE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View RequestE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("RequestE", typeof(IIS.Bakery.Request));
                }
            }
            
            /// <summary>
            /// "RequestL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View RequestL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("RequestL", typeof(IIS.Bakery.Request));
                }
            }
        }
    }
}
